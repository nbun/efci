interface SortPrimes where {
import Prelude;
at 2 :: [Prelude.Int] -> Prelude.Int -> Prelude.Int;
guard 2 :: Prelude.Bool -> a -> a;
isdivs 2 :: Prelude.Int -> Prelude.Int -> Prelude.Bool;
isort 1 :: [Prelude.Int] -> [Prelude.Int];
isort_primes4 0 :: [Prelude.Int];
main 0 :: [Prelude.Int];
myand 2 :: Prelude.Bool -> Prelude.Bool -> Prelude.Bool;
myfilter
2
::
(Prelude.Int -> Prelude.Bool) -> [Prelude.Int] -> [Prelude.Int];
myhead 1 :: [Prelude.Int] -> Prelude.Int;
myiterate 2 :: (a -> a) -> a -> [a];
mymap 2 :: (a -> b) -> [a] -> [b];
ndinsert 2 :: a -> [a] -> [a];
ndinsert2 2 :: a -> [a] -> [a];
perm 1 :: [a] -> [a];
primeList 0 :: [Prelude.Int];
primes 0 :: [Prelude.Int];
psort 1 :: [Prelude.Int] -> [Prelude.Int];
psort_primes4 0 :: [Prelude.Int];
psort_primes8 0 :: [Prelude.Int];
sorted 1 :: [Prelude.Int] -> [Prelude.Int];
suCC 1 :: Prelude.Int -> Prelude.Int;
the_filter 1 :: [Prelude.Int] -> [Prelude.Int];
hiding data Prelude.Int;
hiding data Prelude.Bool
}